// use std::{array, io::BufRead, vec};

// fn main() {
//     let a = vec![vec![0,0,0],vec![0,0,0],vec![0,0,0]];
//     println!()
//     display_board(&a);
// }

// fn display_board (board: &Vec<Vec<i32>>) {
//     for line in board {
//         println!("{line:?}");
//     }
// }

use std::io;
use comfy_table::Table;

fn main() {

    input("X/O? (X/O)");
    println!("{}", create_empty_table());
}

fn create_empty_table () -> comfy_table::Table {
    let mut tic_tac_toe = Table::new();
    tic_tac_toe.add_row(vec![" "," "," ",])
               .add_row(vec![" "," "," ",])
               .add_row(vec![" "," "," ",]);
    return tic_tac_toe;
}

fn input (&str) -> &str {
    let mut typed_input = String::new();
    io::stdin()
        .read_line(&mut typed_input)
        .expect("Failed to read input");

    println!("entered info is {}", typed_input);
    typed_input
}
